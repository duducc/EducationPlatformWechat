<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="myBatis.research.KyProjectGressMapper" >
  <resultMap id="BaseResultMap" type="com.saint.research.bean.KyProjectGressEntity" >
    <id column="XH" property="xh" jdbcType="VARCHAR" />
    <result column="PROSEQUENCE" property="prosequence" jdbcType="VARCHAR" />
    <result column="PRONAME" property="proname" jdbcType="VARCHAR" />
    <result column="PROGRESSDESC" property="progressdesc" jdbcType="VARCHAR" />
    <result column="TASKNUM" property="tasknum" jdbcType="VARCHAR" />
    <result column="TASKNAME" property="taskname" jdbcType="VARCHAR" />
    <result column="REGDATE" property="regdate" jdbcType="DATE" />
    <result column="REGPERID" property="regperid" jdbcType="VARCHAR" />
    <result column="REGPERNAME" property="regpername" jdbcType="VARCHAR" />
    <result column="PROPROION" property="proproion" jdbcType="DECIMAL" />
    <result column="SUBPROPORTION" property="subproportion" jdbcType="DECIMAL" />
    <result column="REMARK1" property="remark1" jdbcType="VARCHAR" />
    <result column="REMARK2" property="remark2" jdbcType="VARCHAR" />
    <result column="REMARK3" property="remark3" jdbcType="VARCHAR" />
    <result column="REMARK4" property="remark4" jdbcType="VARCHAR" />
    <result column="REMARK5" property="remark5" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Sql_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Sql_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    XH, PROSEQUENCE, PRONAME, PROGRESSDESC, TASKNUM, TASKNAME, REGDATE, REGPERID, REGPERNAME, 
    PROPROION, SUBPROPORTION, REMARK1, REMARK2, REMARK3, REMARK4, REMARK5
  </sql>
  <select id="selectListPageKyProjectGressBySqlWhere" resultMap="BaseResultMap" parameterType="com.saint.research.sqlWhere.KyProjectGressSqlWhere" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from KY_PROJECTGRESS
    <if test="_parameter != null" >
      <include refid="Sql_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectListKyProjectGressBySqlWhere" resultMap="BaseResultMap" parameterType="com.saint.research.sqlWhere.KyProjectGressSqlWhere" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from KY_PROJECTGRESS
    <if test="_parameter != null" >
      <include refid="Sql_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectKyProjectGressByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from KY_PROJECTGRESS
    where XH = #{xh,jdbcType=VARCHAR}
  </select>
  <delete id="deleteKyProjectGressByPrimaryKey" parameterType="java.lang.String" >
    delete from KY_PROJECTGRESS
    where XH = #{xh,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteKyProjectGressBySqlWhere" parameterType="com.saint.research.sqlWhere.KyProjectGressSqlWhere" >
    delete from KY_PROJECTGRESS
    <if test="_parameter != null" >
      <include refid="Sql_Where_Clause" />
    </if>
  </delete>
  <insert id="insertKyProjectGress" parameterType="com.saint.research.bean.KyProjectGressEntity" >
    insert into KY_PROJECTGRESS (XH, PROSEQUENCE, PRONAME, 
      PROGRESSDESC, TASKNUM, TASKNAME, 
      REGDATE, REGPERID, 
      REGPERNAME, PROPROION, SUBPROPORTION, 
      REMARK1, REMARK2, REMARK3, 
      REMARK4, REMARK5)
    values (SEQ_KY_PROJECTGRESS.nextVal, #{prosequence,jdbcType=VARCHAR}, #{proname,jdbcType=VARCHAR}, 
      #{progressdesc,jdbcType=VARCHAR}, #{tasknum,jdbcType=VARCHAR}, #{taskname,jdbcType=VARCHAR}, 
      to_date(#{regdate,jdbcType=DATE},'yyyy-mm-dd hh24:mi:ss'), #{regperid,jdbcType=VARCHAR}, 
      #{regpername,jdbcType=VARCHAR}, #{proproion,jdbcType=DECIMAL}, #{subproportion,jdbcType=DECIMAL}, 
      #{remark1,jdbcType=VARCHAR}, #{remark2,jdbcType=VARCHAR}, #{remark3,jdbcType=VARCHAR}, 
      #{remark4,jdbcType=VARCHAR}, #{remark5,jdbcType=VARCHAR})
  </insert>
  <insert id="insertKyProjectGressSelective" parameterType="com.saint.research.bean.KyProjectGressEntity" >
    insert into KY_PROJECTGRESS
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="xh != null and xh != ''" >
        XH,
      </if>
      <if test="prosequence != null and prosequence != ''" >
        PROSEQUENCE,
      </if>
      <if test="proname != null and proname != ''" >
        PRONAME,
      </if>
      <if test="progressdesc != null and progressdesc != ''" >
        PROGRESSDESC,
      </if>
      <if test="tasknum != null and tasknum != ''" >
        TASKNUM,
      </if>
      <if test="taskname != null and taskname != ''" >
        TASKNAME,
      </if>
      <if test="regdate != null and regdate != ''" >
        REGDATE,
      </if>
      <if test="regperid != null and regperid != ''" >
        REGPERID,
      </if>
      <if test="regpername != null and regpername != ''" >
        REGPERNAME,
      </if>
      <if test="proproion != null and proproion != ''" >
        PROPROION,
      </if>
      <if test="subproportion != null and subproportion != ''" >
        SUBPROPORTION,
      </if>
      <if test="remark1 != null and remark1 != ''" >
        REMARK1,
      </if>
      <if test="remark2 != null and remark2 != ''" >
        REMARK2,
      </if>
      <if test="remark3 != null and remark3 != ''" >
        REMARK3,
      </if>
      <if test="remark4 != null and remark4 != ''" >
        REMARK4,
      </if>
      <if test="remark5 != null and remark5 != ''" >
        REMARK5,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="xh != null and xh != ''" >
        #{xh,jdbcType=VARCHAR},
      </if>
      <if test="prosequence != null and prosequence != ''" >
        #{prosequence,jdbcType=VARCHAR},
      </if>
      <if test="proname != null and proname != ''" >
        #{proname,jdbcType=VARCHAR},
      </if>
      <if test="progressdesc != null and progressdesc != ''" >
        #{progressdesc,jdbcType=VARCHAR},
      </if>
      <if test="tasknum != null and tasknum != ''" >
        #{tasknum,jdbcType=VARCHAR},
      </if>
      <if test="taskname != null and taskname != ''" >
        #{taskname,jdbcType=VARCHAR},
      </if>
      <if test="regdate != null and regdate != ''" >
        to_date(#{regdate,jdbcType=DATE},'yyyy-mm-dd hh24:mi:ss'),
      </if>
      <if test="regperid != null and regperid != ''" >
        #{regperid,jdbcType=VARCHAR},
      </if>
      <if test="regpername != null and regpername != ''" >
        #{regpername,jdbcType=VARCHAR},
      </if>
      <if test="proproion != null and proproion != ''" >
        #{proproion,jdbcType=DECIMAL},
      </if>
      <if test="subproportion != null and subproportion != ''" >
        #{subproportion,jdbcType=DECIMAL},
      </if>
      <if test="remark1 != null and remark1 != ''" >
        #{remark1,jdbcType=VARCHAR},
      </if>
      <if test="remark2 != null and remark2 != ''" >
        #{remark2,jdbcType=VARCHAR},
      </if>
      <if test="remark3 != null and remark3 != ''" >
        #{remark3,jdbcType=VARCHAR},
      </if>
      <if test="remark4 != null and remark4 != ''" >
        #{remark4,jdbcType=VARCHAR},
      </if>
      <if test="remark5 != null and remark5 != ''" >
        #{remark5,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countKyProjectGressBySqlWhere" parameterType="com.saint.research.sqlWhere.KyProjectGressSqlWhere" resultType="java.lang.Integer" >
    select count(*) from KY_PROJECTGRESS
    <if test="_parameter != null" >
      <include refid="Sql_Where_Clause" />
    </if>
  </select>
  <update id="updateKyProjectGressBySqlWhereSelective" parameterType="map" >
    update KY_PROJECTGRESS
    <set >
      <if test="record.xh != null and record.xh != ''" >
        XH = #{record.xh,jdbcType=VARCHAR},
      </if>
      <if test="record.prosequence != null and record.prosequence != ''" >
        PROSEQUENCE = #{record.prosequence,jdbcType=VARCHAR},
      </if>
      <if test="record.proname != null and record.proname != ''" >
        PRONAME = #{record.proname,jdbcType=VARCHAR},
      </if>
      <if test="record.progressdesc != null and record.progressdesc != ''" >
        PROGRESSDESC = #{record.progressdesc,jdbcType=VARCHAR},
      </if>
      <if test="record.tasknum != null and record.tasknum != ''" >
        TASKNUM = #{record.tasknum,jdbcType=VARCHAR},
      </if>
      <if test="record.taskname != null and record.taskname != ''" >
        TASKNAME = #{record.taskname,jdbcType=VARCHAR},
      </if>
      <if test="record.regdate != null and record.regdate != ''" >
        REGDATE = to_date(#{record.regdate,jdbcType=DATE},'yyyy-mm-dd hh24:mi:ss'),
      </if>
      <if test="record.regperid != null and record.regperid != ''" >
        REGPERID = #{record.regperid,jdbcType=VARCHAR},
      </if>
      <if test="record.regpername != null and record.regpername != ''" >
        REGPERNAME = #{record.regpername,jdbcType=VARCHAR},
      </if>
      <if test="record.proproion != null and record.proproion != ''" >
        PROPROION = #{record.proproion,jdbcType=DECIMAL},
      </if>
      <if test="record.subproportion != null and record.subproportion != ''" >
        SUBPROPORTION = #{record.subproportion,jdbcType=DECIMAL},
      </if>
      <if test="record.remark1 != null and record.remark1 != ''" >
        REMARK1 = #{record.remark1,jdbcType=VARCHAR},
      </if>
      <if test="record.remark2 != null and record.remark2 != ''" >
        REMARK2 = #{record.remark2,jdbcType=VARCHAR},
      </if>
      <if test="record.remark3 != null and record.remark3 != ''" >
        REMARK3 = #{record.remark3,jdbcType=VARCHAR},
      </if>
      <if test="record.remark4 != null and record.remark4 != ''" >
        REMARK4 = #{record.remark4,jdbcType=VARCHAR},
      </if>
      <if test="record.remark5 != null and record.remark5 != ''" >
        REMARK5 = #{record.remark5,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Sql_Where_Clause" />
    </if>
  </update>
  <update id="updateKyProjectGressBySqlWhere" parameterType="map" >
    update KY_PROJECTGRESS
    set XH = #{record.xh,jdbcType=VARCHAR},
      PROSEQUENCE = #{record.prosequence,jdbcType=VARCHAR},
      PRONAME = #{record.proname,jdbcType=VARCHAR},
      PROGRESSDESC = #{record.progressdesc,jdbcType=VARCHAR},
      TASKNUM = #{record.tasknum,jdbcType=VARCHAR},
      TASKNAME = #{record.taskname,jdbcType=VARCHAR},
      REGDATE = to_date(#{record.regdate,jdbcType=DATE},'yyyy-mm-dd hh24:mi:ss'),
      REGPERID = #{record.regperid,jdbcType=VARCHAR},
      REGPERNAME = #{record.regpername,jdbcType=VARCHAR},
      PROPROION = #{record.proproion,jdbcType=DECIMAL},
      SUBPROPORTION = #{record.subproportion,jdbcType=DECIMAL},
      REMARK1 = #{record.remark1,jdbcType=VARCHAR},
      REMARK2 = #{record.remark2,jdbcType=VARCHAR},
      REMARK3 = #{record.remark3,jdbcType=VARCHAR},
      REMARK4 = #{record.remark4,jdbcType=VARCHAR},
      REMARK5 = #{record.remark5,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Sql_Where_Clause" />
    </if>
  </update>
  <update id="updateKyProjectGressByPrimaryKeySelective" parameterType="com.saint.research.bean.KyProjectGressEntity" >
    update KY_PROJECTGRESS
    <set >
      <if test="prosequence != null and prosequence != ''" >
        PROSEQUENCE = #{prosequence,jdbcType=VARCHAR},
      </if>
      <if test="proname != null and proname != ''" >
        PRONAME = #{proname,jdbcType=VARCHAR},
      </if>
      <if test="progressdesc != null and progressdesc != ''" >
        PROGRESSDESC = #{progressdesc,jdbcType=VARCHAR},
      </if>
      <if test="tasknum != null and tasknum != ''" >
        TASKNUM = #{tasknum,jdbcType=VARCHAR},
      </if>
      <if test="taskname != null and taskname != ''" >
        TASKNAME = #{taskname,jdbcType=VARCHAR},
      </if>
      <if test="regdate != null and regdate != ''" >
        REGDATE = to_date(#{regdate,jdbcType=DATE},'yyyy-mm-dd hh24:mi:ss'),
      </if>
      <if test="regperid != null and regperid != ''" >
        REGPERID = #{regperid,jdbcType=VARCHAR},
      </if>
      <if test="regpername != null and regpername != ''" >
        REGPERNAME = #{regpername,jdbcType=VARCHAR},
      </if>
      <if test="proproion != null and proproion != ''" >
        PROPROION = #{proproion,jdbcType=DECIMAL},
      </if>
      <if test="subproportion != null and subproportion != ''" >
        SUBPROPORTION = #{subproportion,jdbcType=DECIMAL},
      </if>
      <if test="remark1 != null and remark1 != ''" >
        REMARK1 = #{remark1,jdbcType=VARCHAR},
      </if>
      <if test="remark2 != null and remark2 != ''" >
        REMARK2 = #{remark2,jdbcType=VARCHAR},
      </if>
      <if test="remark3 != null and remark3 != ''" >
        REMARK3 = #{remark3,jdbcType=VARCHAR},
      </if>
      <if test="remark4 != null and remark4 != ''" >
        REMARK4 = #{remark4,jdbcType=VARCHAR},
      </if>
      <if test="remark5 != null and remark5 != ''" >
        REMARK5 = #{remark5,jdbcType=VARCHAR},
      </if>
    </set>
    where XH = #{xh,jdbcType=VARCHAR}
  </update>
  <update id="updateKyProjectGressByPrimaryKey" parameterType="com.saint.research.bean.KyProjectGressEntity" >
    update KY_PROJECTGRESS
    set PROSEQUENCE = #{prosequence,jdbcType=VARCHAR},
      PRONAME = #{proname,jdbcType=VARCHAR},
      PROGRESSDESC = #{progressdesc,jdbcType=VARCHAR},
      TASKNUM = #{tasknum,jdbcType=VARCHAR},
      TASKNAME = #{taskname,jdbcType=VARCHAR},
      REGDATE = to_date(#{regdate,jdbcType=DATE},'yyyy-mm-dd hh24:mi:ss'),
      REGPERID = #{regperid,jdbcType=VARCHAR},
      REGPERNAME = #{regpername,jdbcType=VARCHAR},
      PROPROION = #{proproion,jdbcType=DECIMAL},
      SUBPROPORTION = #{subproportion,jdbcType=DECIMAL},
      REMARK1 = #{remark1,jdbcType=VARCHAR},
      REMARK2 = #{remark2,jdbcType=VARCHAR},
      REMARK3 = #{remark3,jdbcType=VARCHAR},
      REMARK4 = #{remark4,jdbcType=VARCHAR},
      REMARK5 = #{remark5,jdbcType=VARCHAR}
    where XH = #{xh,jdbcType=VARCHAR}
  </update>
</mapper>